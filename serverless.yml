service: dynamodb-crud-api

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: us-west-1
  environment:
    DYNAMODB_TABLE_NAME: ${self:custom.vendorsMenus}

custom:
  vendorsMenus: vendors-menus${self:provider.stage}

plugins:
  - serverless-iam-roles-per-function

functions:
  getMenu:
    handler: api.getMenu
    name: get-menu
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: menu/{vendorId}
          method: GET
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:GetItem"
        Resource: !GetAtt VendorsMenusTable.Arn
  createPost:
    handler: api.createMenu
    name: create-menu
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: post
          method: POST
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:PutItem"
        Resource: !GetAtt VendorsMenusTable.Arn
  # updatePost:
  #   handler: api.updatePost
  #   name: update-post
  #   memorySize: 128 # mb
  #   timeout: 5 # seconds
  #   events:
  #     - http:
  #         path: post/{postId}
  #         method: PUT
  #   iamRoleStatements:
  #     - Effect: "Allow"
  #       Action:
  #         - "dynamodb:UpdateItem"
  #       Resource: !GetAtt VendorsMenusTable.Arn
  # deletePost:
  #   handler: api.deletePost
  #   name: delete-post
  #   memorySize: 128 # mb
  #   timeout: 5 # seconds
  #   events:
  #     - http:
  #         path: post/{postId}
  #         method: DELETE
  #   iamRoleStatements:
  #     - Effect: "Allow"
  #       Action:
  #         - "dynamodb:DeleteItem"
  #       Resource: !GetAtt VendorsMenusTable.Arn
  # getAllPosts:
  #   handler: api.getAllPosts
  #   name: get-all-posts
  #   memorySize: 128 # mb
  #   timeout: 5 # seconds
  #   events:
  #     - http:
  #         path: posts
  #         method: GET
  #   iamRoleStatements:
  #     - Effect: "Allow"
  #       Action:
  #         - "dynamodb:Scan"
  #       Resource: !GetAtt VendorsMenusTable.Arn

resources:
  Resources:
    VendorsMenusTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.vendorsMenus}
        AttributeDefinitions:
          - AttributeName: vendorId
            AttributeType: S
        KeySchema:
          - AttributeName: vendorId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
